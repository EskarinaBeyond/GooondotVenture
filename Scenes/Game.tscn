[gd_scene load_steps=9 format=2]

[ext_resource path="res://Scenes/Fader.tscn" type="PackedScene" id=1]
[ext_resource path="res://Scenes/Player.tscn" type="PackedScene" id=2]
[ext_resource path="res://Scenes/Interaction/Interacter.tscn" type="PackedScene" id=3]
[ext_resource path="res://Scenes/UI/Descriptor_Box.tscn" type="PackedScene" id=4]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

onready var in_game = $InGame
onready var camera = $Camera2D
onready var fader = $Fader
onready var descriptor_box = $UI/Descriptor_Box
onready var interacter = $Interacter

var player = null
var level = null

func add_level():
	
	level = load(str(\"res://Scenes/Levels/\", G.next_level_name, \".tscn\")).instance()
	in_game.add_child(level)
	#player = level.find_node(\"Player\")
	player = $Player


func put_camera_on_player():
	
	remove_child(camera)
	player.add_child(camera)


func connect_to_doors():
	
	for child in level.find_node(\"Objects\").get_children():
		if child.name.begins_with(\"Door\"):
			child.connect(\"enter_door\", self, \"_on_enter_door\")


func connect_to_interacter():
	
	interacter.connect(\"activate_interacter\", self, \"_on_activate_interacter\")
	interacter.connect(\"deactivate_interacter\", self, \"_on_deactivate_interacter\")
	
	interacter.connect(\"activate_interacter\", player, \"_on_activate_interacter\")
	interacter.connect(\"deactivate_interacter\", player, \"_on_deactivate_interacter\")


func _on_activate_interacter():
	
	interacter.position = player.position


func _on_deactivate_interacter():
	
	pass


func _on_enter_door():
	
	var animation_player = fader.fade_out()
	yield(animation_player, \"animation_finished\")
	get_tree().paused = false
	get_tree().reload_current_scene()


func check_for_door():
	
	if G.next_level_door != null:
		var door = level.find_node(G.next_level_door)
		player.position = door.position + Vector2(0, 8)
		G.next_level_door = null


func set_fader_position():
	
	fader.rect_position = camera.get_camera_screen_center() - Vector2 (96, 54)
	descriptor_box.rect_position = camera.get_camera_screen_center() - Vector2 (96, -14)



func _ready():
	
	add_level()
	connect_to_doors()
	check_for_door()
	put_camera_on_player()
	fader.fade_in()
	set_fader_position()
	connect_to_interacter()
	
	interacter.player = player
	interacter.descriptor_box = descriptor_box


func _process(delta):
	
	set_fader_position()


"

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;

uniform vec3 gray_ratio = vec3(0.21, 0.72, 0.07);

void fragment(){
	vec4 color = texture(SCREEN_TEXTURE, SCREEN_UV);
	color.rgb *= gray_ratio;
	COLOR.rgb = vec3(color.r + color.g + color.b);
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/gray_ratio = Vector3( 0.21, 0.72, 0.07 )

[sub_resource type="StreamTexture" id=2]
load_path = "res://.import/white_rectangle.png-c28916d03d87b3a5b93f3bfd83381395.stex"

[node name="Game" type="Node2D"]
script = SubResource( 1 )

[node name="InGame" type="Node2D" parent="."]

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2( 0, 4 )
current = true
limit_left = -20
limit_top = -50
limit_bottom = 1215752192
editor_draw_limits = true
editor_draw_drag_margin = true

[node name="CanvasLayer" type="CanvasLayer" parent="Camera2D"]

[node name="TextureRect" type="TextureRect" parent="Camera2D/CanvasLayer"]
material = SubResource( 4 )
margin_left = -20.0
margin_top = -50.0
margin_right = 206.0
margin_bottom = 122.0
texture = SubResource( 2 )
expand = true
stretch_mode = 1

[node name="Fader" parent="." instance=ExtResource( 1 )]
pause_mode = 2
margin_left = 0.0
margin_top = 0.0
margin_right = 192.0
margin_bottom = 108.0

[node name="Player" parent="." instance=ExtResource( 2 )]
position = Vector2( 242.726, 332.958 )

[node name="Interacter" parent="." instance=ExtResource( 3 )]
position = Vector2( 14.4124, 23.7411 )

[node name="UI" type="Control" parent="."]
margin_right = 40.0
margin_bottom = 40.0

[node name="Descriptor_Box" parent="UI" instance=ExtResource( 4 )]
modulate = Color( 1, 1, 1, 0 )
